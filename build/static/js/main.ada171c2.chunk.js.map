{"version":3,"sources":["service.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","delete","id","put","Notification","props","content","error","className","Person","name","number","onClick","handleDelete","Persons","personsToList","map","key","Filter","value","search","onChange","handleSearchChange","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","type","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","notification","setNotification","setError","useEffect","service","filter","toUpperCase","includes","event","target","onSubmit","preventDefault","updatedPerson","window","confirm","updateEntry","setTimeout","createdPerson","catch","createEntry","selectedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ada171c2.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'https://salty-temple-72535.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (person) => {\n  const request = axios.post(baseUrl, person)\n  return request.then(response => response.data)\n}\n\nconst remove = (person) => {\n  const request = axios.delete(baseUrl + \"/\" + person.id)\n  return request.then(response => response.data)\n}\n\nconst update = (person) => {\n  const request = axios.put(baseUrl + \"/\" + person.id, person)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  remove: remove,\n  update: update\n}\n","import React, { useState, useEffect } from 'react'\nimport service from './service'\nimport './index.css'\n\nconst Notification = (props) => {\n  if (props.content === null) {\n    return <></>\n  } else if (props.error) {\n    return <div className=\"error\">{props.content}</div>\n  } else {\n    return <div className=\"message\">{props.content}</div>\n  }\n}\n\nconst Person = (props) => {\n  return <p>{props.person.name} {props.person.number}<button onClick={() => { props.handleDelete(props.person) }} >delete</button></p>\n}\n\nconst Persons = (props) => {\n  return (\n    props.personsToList.map((person) => <Person key={person.name} person={person} handleDelete={props.handleDelete}/>)\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <p>filter shown name <input value={props.search} onChange={props.handleSearchChange}/></p>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n        <br/>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ error, setError ] = useState(false)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value) \n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleDelete = (selectedPerson) => {\n    if (window.confirm(\"Delete \" + selectedPerson.name + \"?\")) {\n      service.remove(selectedPerson)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== selectedPerson.id))\n        })\n        .catch(error => {\n          setError(true)\n          setNotification(`Information of ${selectedPerson.name} has already been removed`)\n          setTimeout(() => {\n            setNotification(null) \n            setError(false)\n          },3000)\n        })\n    }\n  }\n\n  const nameExists = () => {\n    const oldNamesList = persons.map((person)=> person.name)\n    return oldNamesList.includes(newName)\n  }\n\n  useEffect(() => {\n    service.getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  const updateEntry = (updatedPerson) => {\n    if (window.confirm(`${updatedPerson.name} is already added to the phonebook, replace old number with a new one?`)) {\n      let updateEntry = persons.filter(person => person.name === updatedPerson.name)[0]\n      updatedPerson.id = updateEntry.id\n      service.update(updatedPerson).then(response => {\n        service.getAll().then(persons => {\n          setPersons(persons)\n          setError(false)\n          setNotification(`Updated ${updatedPerson.name}`)\n        })\n      })\n      setTimeout(() => setNotification(null), 3000)\n    }\n  }\n\n  const createEntry = (person) => {\n    service.create(person)\n      .then((createdPerson) => {\n        setError(false)\n        setNotification(`Added ${person.name}`)\n        service.getAll().then(persons => {\n          setPersons(persons)\n        })\n      })\n      .catch(error => {\n        setError(true)\n        setNotification(error.response.data.error)\n      })\n    setTimeout(() => setNotification(null), 3000)\n  }\n\n  const addEntry = (event) => {\n    const person = {name: newName, number: newNumber}\n    event.preventDefault()\n    nameExists() ? updateEntry(person) : createEntry(person)\n    setNewName('')\n    setNewNumber('')\n    setSearch('')\n  }\n\n  let personsToList = persons\n  if (search) { \n    personsToList = persons.filter((person) => person.name.toUpperCase().includes(search.toUpperCase()))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification content={notification} error={error}/>\n      <Filter value={search} handleSearchChange={handleSearchChange}/>\n      <h2>add a new</h2>\n      <form onSubmit={addEntry}>\n        <PersonForm newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      </form>\n      <h2>Numbers</h2>\n      <Persons personsToList={personsToList} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}